#include <sys/types.h> 
#include <sys/socket.h> 
#include <netinet/in.h> 
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <mysql.h>
#include <pthread.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdbool.h>
#include <netinet/in.h>
#include <pthread.h>
#include <time.h>

typedef struct
{
	int *sock;
	char Nombre[20];
	int id;
} Cliente;

typedef struct
{
	Cliente cliente[100];
	int numero_clientes;
	int numero_jugadores;
	
} Cliente_Lista;

typedef struct {
	char dato[20];
	
}Dato;

typedef struct {
	int rows;
	int cols;
	Dato data[10][10]; 
} Matriz;

typedef struct {
	char Nombre[20];
	int ID;
	int  Socket;
	int Points;
} Jugador;

typedef struct {
	char Nombre[20];
	char Mensaje[200];
} Mensaje;

typedef struct {
	Mensaje Mensajes[20];
	int num_mensajes;
}Chat;

typedef struct {
	int players[4];
}Confirmacion;

typedef struct {
	Jugador jugadores[4];
	int numero_Jug;
	int ID_Loby;
	Chat chat;
	Confirmacion confirmacion;
} Loby;

typedef struct {
	Loby Lobys[20];
	int num_Lobys;
}Lobys;

typedef struct {
	int idloby;
}ContadorLoby;


char clientes[300];
MYSQL *conn;
Cliente_Lista Clis;
Lobys Lobyreal;
ContadorLoby Contadoridloby;
int i;
int puerto = 9050;
int Socket[100];
char peticion[512];

void conectarBD() {
	
	conn = mysql_init(NULL);
	if (conn==NULL) {
		printf ("Error al crear la conexion: %u %s\n",
				mysql_errno(conn), mysql_error(conn));
		exit (1);
	}
	conn = mysql_real_connect (conn, "shiva2.upc.es","root", "mysql", "JuegoPropio", 0, NULL, 0);
	//conn = mysql_real_connect (conn, "localhost","root", "mysql", NULL, 0, NULL, 0);
	if (conn==NULL)
	{
		printf ("Error al inicializar la conexion: %u %s\n",
				mysql_errno(conn), mysql_error(conn));
		exit (1);
	}
}

void ejecutarConsultaSQL(char *sql) {
	if (mysql_query(conn, sql) != 0) {
		fprintf(stderr, "Error en la consulta: %s\n", mysql_error(conn));
		mysql_close(conn);
		exit(EXIT_FAILURE);
	}
}



int main (int argc, char *argv[]){
	
	
	conectarBD();
	char consulta[80];
	char edads[6];
	for(i=0; i<6;i++){
		printf("Escribe el nombre y tu contrase￱a, separados por un blanco\n");
		err = scanf(" %s %s");
		if(err! = 5){
			printf ("Error al introducir los datos \n");
			exit(1);
		}
	}
	
	strcpy( consulta, "INSERT INTO Jugador VALUES");
	strcat(consulta,contrase￱a);
	strcat(consulta, ",");
	strcat(consulta, nombre);
	strcat(consulta, ",");
	sprintf(edads, "%d",edad);
	strcat(consulta, edads);
	strcat(consulta, ");");
	printf("consulta = %s\n", consulta);
	
	if(err!=0){
		printf("Error al introducir datos de la base %u %s\n");
		exit(1);
	}
	
	mysql_close(conn); 
	
	
	
	int sock_conn, sock_listen, ret;
	struct sockaddr_in_serv_adr;
	char buff[512];
	
	if((sock_listen = socket(AF_INET, SOCK_STREAM, 0)) < 0){
		printf("Error creant socket");
	}
	
	memset(&serv_adr, 0 , sizeof(serv_adr));
	serv_adr.sin_family = AF_INET;
	
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	
	serv_adr.sin_port = htons(9050);
	if(bind(sock_listen, (struct sockaddr*) & serv_adr,sizeof(serv_adr))<0)
	printf("Error al bind");
	
	if(listen(sock_listen,2)<0)
	printf("Error en el listen");
	
	int i;
	for(i=0;i<7;i++){
	printf("Escuchando\n");
	
	sock_conn = accept(sock_listen,NULL,NULL);
	printf("He recibido conexion\n");
	
	close(sock_conn);
	
	
	}
}
